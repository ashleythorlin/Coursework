     1                                  ;================================================================================================================================
     2                                  ;
     3                                  ;	Ashley Thorlin
     4                                  ;	CPSC 240-01
     5                                  ;	ashleythorlin@csu.fullerton.edu
     6                                  ;	Electricity Program
     7                                  ;
     8                                  ;================================================================================================================================
     9                                  
    10                                  extern  printf
    11                                  
    12                                  extern scanf
    13                                  
    14                                  extern fgets
    15                                  
    16                                  extern strlen
    17                                  
    18                                  extern stdin
    19                                   
    20                                  global copernicus
    21                                  
    22                                  constant_k equ 0x4200BEC41C000000
    23                                  
    24                                  max_name equ 32
    25                                  
    26                                  max_title equ 32
    27                                   
    28                                  ;================================================================================================================================
    29                                  
    30                                  ;Declare messages used in program 
    31                                  segment .data
    32                                  
    33                                  align 16
    34                                  
    35 00000000 546869732070726F67-     description db "This program will help you find the force.", 10, 0
    35 00000009 72616D2077696C6C20-
    35 00000012 68656C7020796F7520-
    35 0000001B 66696E642074686520-
    35 00000024 666F7263652E0A00   
    36                                  
    37 0000002C 506C6561736520656E-     input_part1 db "Please enter the electrical charge on particle 1: ", 0
    37 00000035 746572207468652065-
    37 0000003E 6C656374726963616C-
    37 00000047 20636861726765206F-
    37 00000050 6E207061727469636C-
    37 00000059 6520313A2000       
    38                                  
    39 0000005F 506C6561736520656E-     input_part2 db "Please enter the electrical charge on particle 2: ", 0
    39 00000068 746572207468652065-
    39 00000071 6C656374726963616C-
    39 0000007A 20636861726765206F-
    39 00000083 6E207061727469636C-
    39 0000008C 6520323A2000       
    40                                  
    41 00000092 506C6561736520656E-     input_dist db "Please enter the distance between the particles in meters: ", 0
    41 0000009B 746572207468652064-
    41 000000A4 697374616E63652062-
    41 000000AD 65747765656E207468-
    41 000000B6 65207061727469636C-
    41 000000BF 657320696E206D6574-
    41 000000C8 6572733A2000       
    42                                  
    43 000000CE 00                      input_name db "", 0
    44                                  
    45 000000CF 506C6561736520656E-     input_title db "Please enter your title: ", 0
    45 000000D8 74657220796F757220-
    45 000000E1 7469746C653A2000   
    46                                  
    47 000000E9 5468616E6B20796F75-     endmessage db "Thank you. Your force is %1.18lf Newtons.", 10, 0
    47 000000F2 2E20596F757220666F-
    47 000000FB 726365206973202531-
    47 00000104 2E31386C66204E6577-
    47 0000010D 746F6E732E0A00     
    48                                  
    49 00000114 257300                  stringformat db "%s", 0
    50                                  
    51 00000117 256C6600                floatformat db "%lf", 0
    52                                  
    53 0000011B 90<rept>                align 64
    54                                  
    55                                  ;================================================================================================================================
    56                                  
    57                                  segment .bss
    58                                  
    59 00000000 <res 00000020>          user_name resb max_name
    60                                  
    61 00000020 <res 00000020>          user_title resb max_title
    62                                  
    63                                  ;================================================================================================================================
    64                                  
    65                                  segment .text
    66                                  
    67                                  copernicus:
    68                                  
    69                                  	;Backup registers
    70 00000000 55                      	push rbp
    71 00000001 4889E5                  	mov  rbp, rsp
    72 00000004 57                      	push rdi
    73 00000005 56                      	push rsi
    74 00000006 52                      	push rdx
    75 00000007 51                      	push rcx
    76 00000008 4150                    	push r8
    77 0000000A 4151                    	push r9
    78 0000000C 4152                    	push r10
    79 0000000E 4153                    	push r11
    80 00000010 4154                    	push r12
    81 00000012 4155                    	push r13
    82 00000014 4156                    	push r14
    83 00000016 4157                    	push r15
    84 00000018 53                      	push rbx
    85 00000019 9C                      	pushf
    86                                  	
    87 0000001A 6A00                    	push qword 0 
    88                                  	
    89                                  	;display description of program
    90 0000001C B800000000              	mov qword rax, 0
    91 00000021 48BF-                   	mov 	rdi, stringformat
    91 00000023 [1401000000000000] 
    92 0000002B 48BE-                   	mov 	rsi, description				;"This program will help you find the force."
    92 0000002D [0000000000000000] 
    93 00000035 E8(00000000)            	call 	printf
    94                                  	
    95                                  	;---particle 1---
    96                                  	
    97                                  	;prompt user for particle 1 charge
    98 0000003A B800000000              	mov qword rax, 0
    99 0000003F 48BF-                   	mov 	rdi, stringformat
    99 00000041 [1401000000000000] 
   100 00000049 48BE-                   	mov 	rsi, input_part1				;"Please enter the electrical charge on particle 1:"
   100 0000004B [2C00000000000000] 
   101 00000053 E8(00000000)            	call 	printf
   102                                  	
   103                                  	;get charge 1 from user
   104 00000058 6A00                    	push qword 0
   105 0000005A B800000000              	mov qword rax, 0
   106 0000005F 48BF-                   	mov 	rdi, floatformat
   106 00000061 [1701000000000000] 
   107 00000069 4889E6                  	mov 	rsi, rsp
   108 0000006C E8(00000000)            	call 	scanf
   109                                  	
   110 00000071 F2440F101424            	movsd 	xmm10, [rsp]
   111 00000077 58                      	pop 	rax
   112                                  	
   113                                  	;---particle 2---
   114                                  	
   115                                  	;prompt user for particle 2 charge
   116 00000078 B800000000              	mov qword rax, 0
   117 0000007D 48BF-                   	mov 	rdi, stringformat
   117 0000007F [1401000000000000] 
   118 00000087 48BE-                   	mov 	rsi, input_part2				;"Please enter the electrical charge on particle 2:"
   118 00000089 [5F00000000000000] 
   119 00000091 E8(00000000)            	call 	printf
   120                                  	
   121                                  	;get charge 2 from user
   122 00000096 6A00                    	push qword 0
   123 00000098 B800000000              	mov qword rax, 0
   124 0000009D 48BF-                   	mov 	rdi, floatformat
   124 0000009F [1701000000000000] 
   125 000000A7 4889E6                  	mov 	rsi, rsp
   126 000000AA E8(00000000)            	call 	scanf
   127                                  	
   128 000000AF F2440F101C24            	movsd 	xmm11, [rsp]
   129 000000B5 58                      	pop 	rax
   130                                  	
   131                                  	;---distance---
   132                                  	
   133                                  	;prompt user for distance
   134 000000B6 B800000000              	mov qword rax, 0
   135 000000BB 48BF-                   	mov 	rdi, stringformat
   135 000000BD [1401000000000000] 
   136 000000C5 48BE-                   	mov 	rsi, input_dist					;"Please enter the distance between the particles in meters:"
   136 000000C7 [9200000000000000] 
   137 000000CF E8(00000000)            	call 	printf
   138                                  	
   139                                  	;get distance from user
   140 000000D4 6A00                    	push qword 0
   141 000000D6 B800000000              	mov qword rax, 0
   142 000000DB 48BF-                   	mov 	rdi, floatformat
   142 000000DD [1701000000000000] 
   143 000000E5 4889E6                  	mov 	rsi, rsp
   144 000000E8 E8(00000000)            	call 	scanf
   145                                  	
   146 000000ED F2440F102424            	movsd 	xmm12, [rsp]
   147 000000F3 58                      	pop 	rax
   148                                  	
   149 000000F4 E8(00000000)            	call fgets 
   150                                  	
   151                                  	;---name---
   152                                  	
   153                                  	;prompt user for last name
   154 000000F9 B800000000              	mov qword rax, 0
   155 000000FE 48BF-                   	mov 	rdi, stringformat
   155 00000100 [1401000000000000] 
   156 00000108 48BE-                   	mov 	rsi, input_name					;"Please enter your last name:"
   156 0000010A [CE00000000000000] 
   157 00000112 E8(00000000)            	call 	printf
   158                                  	
   159                                  	;get last name from user
   160 00000117 6A00                    	push qword 0
   161 00000119 B800000000              	mov qword rax, 0
   162 0000011E 48BF-                   	mov 	rdi, user_name
   162 00000120 [0000000000000000] 
   163 00000128 BE20000000              	mov 	rsi, max_name
   164 0000012D 488B1425[00000000]      	mov 	rdx, [stdin]
   165 00000135 E8(00000000)            	call 	fgets
   166                                  	
   167 0000013A 58                      	pop rax
   168                                  	
   169 0000013B 48BF-                   	mov		rdi, user_name
   169 0000013D [0000000000000000] 
   170 00000145 E8(00000000)            	call	strlen
   171 0000014A 4989C6                  	mov 	r14, rax
   172 0000014D 41C686[FFFFFFFF]00      	mov 	[user_name+r14-1], byte 0
   173                                  	
   174                                  	;---title---
   175                                  	
   176                                  	;prompt user for title
   177 00000155 B800000000              	mov qword rax, 0
   178 0000015A 48BF-                   	mov 	rdi, stringformat
   178 0000015C [1401000000000000] 
   179 00000164 48BE-                   	mov 	rsi, input_title				;"Please enter your title:"
   179 00000166 [CF00000000000000] 
   180 0000016E E8(00000000)            	call 	printf
   181                                  	
   182                                  	;get title from user
   183 00000173 6A00                    	push qword 0
   184 00000175 B800000000              	mov qword rax, 0
   185 0000017A 48BF-                   	mov 	rdi, user_title
   185 0000017C [2000000000000000] 
   186 00000184 BE20000000              	mov 	rsi, max_title
   187 00000189 488B1425[00000000]      	mov 	rdx, [stdin]
   188 00000191 E8(00000000)            	call 	fgets
   189                                  	
   190 00000196 58                      	pop rax
   191                                  	
   192 00000197 48BF-                   	mov		rdi, user_title
   192 00000199 [2000000000000000] 
   193 000001A1 E8(00000000)            	call	strlen
   194 000001A6 4989C6                  	mov 	r14, rax
   195 000001A9 41C686[1F000000]00      	mov 	[user_title+r14-1], byte 0
   196                                  	
   197 000001B1 58                      	pop rax
   198                                  	
   199                                  	;---calculate force---
   200                                  	
   201 000001B2 6A00                    	push qword 0
   202 000001B4 F2450F59D3              	mulsd 	xmm10, xmm11		;multiply q1 * q2
   203 000001B9 F2450F59E4              	mulsd 	xmm12, xmm12		;square distance (xmm12)
   204 000001BE F2450F5ED4              	divsd 	xmm10, xmm12		;divide xmm10/xmm12 ((q1*q2)/r^2)
   205 000001C3 48BB0000001CC4BE00-     	mov 	rbx, constant_k		;put k value on xmm13 for multiplying
   205 000001CC 42                 
   206 000001CD 53                      	push 	rbx
   207 000001CE F2440F591424            	mulsd 	xmm10, [rsp]		;multiply quotient by k
   208 000001D4 58                      	pop rax
   209                                  	
   210 000001D5 6A00                    	push qword 0				;save copy of result before calling printf
   211 000001D7 F2440F111424            	movsd 	[rsp], xmm10
   212                                  	
   213                                  	;---end message---
   214 000001DD B803000000              	mov 	rax, 3
   215 000001E2 48BF-                   	mov 	rdi, endmessage					;"Thank you. Your force is %7.5lf Newtons."
   215 000001E4 [E900000000000000] 
   216 000001EC E8(00000000)            	call 	printf
   217                                  	
   218 000001F1 58                      	pop 	rax
   219 000001F2 58                      	pop 	rax
   220                                  	
   221 000001F3 48B8-                   	mov 	rax, user_title					;return user_title to the os
   221 000001F5 [2000000000000000] 
   222                                  	
   223                                  	;pop the system stack
   224 000001FD 9D                      	popf          
   225 000001FE 5B                      	pop rbx                                                                                            
   226 000001FF 415F                    	pop r15                                                     
   227 00000201 415E                    	pop r14                                                      
   228 00000203 415D                    	pop r13                                                      
   229 00000205 415C                    	pop r12                                                      
   230 00000207 415B                    	pop r11                                                     
   231 00000209 415A                    	pop r10                                                     
   232 0000020B 4159                    	pop r9                                                      
   233 0000020D 4158                    	pop r8                                                      
   234 0000020F 59                      	pop rcx                                                     
   235 00000210 5A                      	pop rdx                                                     
   236 00000211 5E                      	pop rsi                                                     
   237 00000212 5F                      	pop rdi                                                     
   238 00000213 5D                      	pop rbp
   239                                  
   240 00000214 C3                      	ret
   241                                  	
   242                                  ;================================================================================================================================
